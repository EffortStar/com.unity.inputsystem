{
  "name": "com.unity.inputsystem",
  "displayName": "Input System",
  "version": "1.8.0",
  "unity": "2019.4",
  "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
  "keywords": [
    "input",
    "events",
    "keyboard",
    "mouse",
    "gamepad",
    "touch",
    "vr",
    "xr"
  ],
  "dependencies": {
    "com.unity.modules.uielements": "1.0.0"
  },
  "_upm": {
    "changelog": "### Changed\n- From 2023.2 forward: UI toolkit now uses the \"UI\" action map of project-wide actions as their default input actions. Previously, the actions were hardcoded and were based on `DefaultInputActions` asset which didn't allow user changes. Also, removing bindings or renaming the 'UI' action map of project wide actions will break UI input for UI toolkit.\n- Changed the 'Max player count reached' error to a warning instead.\n- Removed \"Input Actions\" title from UI-Toolkit Input Action Editor when used in a window and not embedded in Project Settings.\n- Moved project wide input action storage over to an Asset to avoid issues with multiple assets in a single project settings file.\n- Migrate any project-wide input actions found in the InputManager.asset file to a new InputSystem_Actions.inputactions asset file.\n- `InputSystem.actions` may now only be assigned in edit-mode. Any attempt to assign `InputSystem.actions` during play-mode will generate an exception.\n- `InputSystem.actions` may now only be assigned a persisted `InputActionAsset` instance since in-memory objects can anyway not be included in a player build. This now generates an `ArgumentException` when attempting to assign a non-persisted object.\n- Project Settings embedded Input Action Editor will now disallow selecting the Project-wide Actions asset during play-mode. The option is only available in edit-mode.\n- The \"Assign as the Project-wide Input Actions\" option visible in the Inspector when selecting an .inputactions asset that is not the current Project-wide Input Actions Asset is now disabled in play-mode.\n\n### Added\n- Added new methods and properties to [`InputAction`](xref:UnityEngine.InputSystem.InputAction):\n  - [`InputAction.activeValueType`](xref:UnityEngine.InputSystem.InputAction.activeValueType) returns the `Type` expected by `ReadValue<TValue>` based on the currently active control that is driving the action.\n  - [`InputAction.GetControlMagnitude`](xref:UnityEngine.InputSystem.InputAction.GetControlMagnitude) returns the current amount of actuation of the control that is driving the action.\n  - [`InputAction.WasCompletedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasCompletedThisFrame) returns `true` on the frame that the action stopped being in the performed phase. This allows for similar functionality to [`WasPressedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasPressedThisFrame)/[`WasReleasedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasReleasedThisFrame) when paired with [`WasPerformedThisFrame`](xref:UnityEngine.InputSystem.InputAction.WasPerformedThisFrame) except it is directly based on the interactions driving the action. For example, you can use it to distinguish between the button being released or whether it was released after being held for long enough to perform when using the Hold interaction.\n- Added Copy, Paste and Cut support for Action Maps, Actions and Bindings via context menu and key command shortcuts.\n- Added Dual Sense Edge controller to be mapped to the same layout as the Dual Sense controller\n- Added drag and drop support in the Input Action Asset Editor for Action Maps, Actions and Bindings.\n- UI Toolkit input action editor now supports showing the derived bindings.\n- Device filtering support for control schemes in the UI-Toolkit Input Asset Editor.\n- Added right-click (context) menu support for empty areas below the Action Maps/Actions lists in the Project Settings Input Action Editor and Asset Input Action Editor.\n- Added text to show which action map asset was used to create each action in the Input Debug window.\n\n### Fixed\n- Fixed syntax of code examples in API documentation for [`AxisComposite`](xref:UnityEngine.InputSystem.Composites.AxisComposite).\n- Fixed missing confirmation popup when deleting a control scheme.\n- Fixed support for menu bar/customisable keyboard shortcuts used when interacting with Actions and Action Maps.\n- Fixed add bindings button to support left button click.\n- Fixed icon for adding bindings and composites button.\n- Fixed Documentation~/filter.yml GlobalNamespace rule removing all API documentation.\n- Fixed `Destroy may not be called from edit mode` error [ISXB-695](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-695)\n- Fixed possible exceptions thrown when deleting and adding Action Maps.\n- Fixed selection not changing when right-clicking an Action Map or Action in the Project Settings Input Actions Editor.\n- Fixed right-click context menus throwing errors when dealing with multiple Input Actions Editor windows.\n- Fixed potential race condition on access to GCHandle in DefferedResolutionOfBindings and halved number of calls to GCHandle resolution [ISXB-726](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-726)\n- Fixed issue where composite part dropdown manipulates binding path and leaves composite part field unchanged.\n- Fixed lingering highlight effect on Save Asset button after clicking.\n- Fixed missing name in window title for Input Action assets.\n- Fixed showing action properties view when there were no actions.\n- Fixed \"Listen\" functionality for selecting an input sometimes expecting the wrong input type.\n- Fixed console errors that can be produced when opening input package settings from the Inspector.\n- Fixed InputManager.asset file growing in size on each Reset call.\n- Fixed Opening InputDebugger throws 'Action map must have state at this point' error.\n- Fixed Cut/Paste behaviour to match Editor - Cut items will now be cleared from clipboard after pasting.\n- Improved window layout to avoid elements being hidden (both the Input Actions in Project Settings, and standalone Input Actions Editor windows).\n- Fixed InputAction asset appearing dirty after rename [ISXB-749](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-749).\n- Fixed Error logged when InputActionsEditor window opened without a valid asset.\n- Fixed ArgumentNullExceptions thrown when deleting items quickly in the UITK Editor.\n- Fixed Project Settings header title styling for Input Actions editor.\n- Fixed Input Actions Editor losing reference to current ControlScheme upon entering Play Mode [ISXB-770](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-770).\n- Fixed Save shortcut (ctrl/cmd + S by default) not saving changes in Input Actions Editor windows. [ISXB-659](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-659).\n- Fixed headers in InputActionsEditor windows becoming squashed when there is a large number of Action Maps/Actions.\n- Fixed duplication of project wide input actions when loading/unloading scenes.\n- Fixed an issue where UI Toolkit based editor would not close itself if the associated asset would be deleted (To mimic IMGUI Input Action Editor behavior).\n- Fixed a regression in IMGUI Input Action Editor where editor would auto-save on focus lost even when the auto-save toggle was disabled.\n- Fixed an issue where UI Toolkit based editor would not properly track tentative changes associated with a moved asset file.\n- Fixed an issue where selection state of UI Toolkit editor state would not be preserved when associated with a new serialized copy of the asset.\n- Fixed an issue where any exceptions throw from within UI Toolkit event queue would only log the error message and not the full exception stack trace, making debugging more difficult.\n- Fixed an issue where UI Toolkit Input Actions Editor wouldn't provide a correct modification state when coming back from domain reload.\n- Fixed an issue in the Input Actions Editor window where entries being cut would be deleted instantly and not after being pasted.\n- Fixed an issue where preloaded InputActionAsset objects added by a Unity developer could accidentally be selected as the project-wide actions asset instead of the configured asset in built players.\n- Fixed a compile-time warning: `warning CS0109: The member 'UnityRemoteTestScript.camera' does not hide an accessible member. The new keyword is not required.` showing up in the Console window when building a player including the Input System Unity Remote sample.\n- Fixed an issue where the InputActionAsset editor window would remove the unsaved changes asterisk when cancelling the window. [ISXB-797](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-797).\n- Fixed an issue in the Input Actions Editor window where deleting items unfolded other actions or the selection switched unintended.\n- Fixed Composite types missing in context menu when \"Any\" ControlType selected. [ISXB-769](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-769).\n- Fixed 3D Vector and 1D Axis binding dropdown usage in Input Actions Editor throwing NotImplementedExceptions.\n- Fixed several missing tooltips from the Action/Binding Properties pane in Input Actions Editor.\n- Fixed an issue in the InputActionAsset Editor where ControlType wasn't updated when ActionType changed.\n- Fixed an issue in the InputActionAsset Editor where Canceling ControlScheme changes didn't reset the values in the UI.\n- Fixed an issue where newly created action map names were not editable.\n- Fixed an issue where having unsaved changes in `InputActionsEditorWindow` would be discarded when entering play-mode (or triggering domain reload in general).\n- Fixed an issue where a `InputActionsEditorWindow` would not find an existing open editor window if the editor was open during a domain reload and then the asset was opened from the Project Explorer.\n- Fixed a visual glitch in the InputActionAsset Editor when scrolling the Actions list with a rename in progress. [ISXB-748](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-748)\n- Fixed ProjectWideActions template so Previous/Next Actions are Button instead of Axis.\n- Fixed an issue in the Input Action Editor window where entries being cut would be deleted instantly and not after being pasted.\n- Fixed an issue in the Input Action Editor window where deleting items unfolded other actions or the selection switched unintended.\n- Fixed an issue where InputActionAsset validation where not triggered for Project-wide input actions when the project-wide asset was edited in a regular windowed Input Action Asset editor window.\n- Fixed incorrect documentation in InputSystem.actions and InputSystem.onActionsChanged property API contract.\n- Fixed an issue where `InputSystem.actions` could be incorrectly evaluated if the associated asset was deleted."
  },
  "upmCi": {
    "footprint": "74724be0c6bb4bb2e2a25af7f7c8dcb0318dc3c6"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.inputsystem@1.8/manual/index.html",
  "repository": {
    "url": "https://github.com/Unity-Technologies/InputSystem.git",
    "type": "git",
    "revision": "c21ca7ef6555bc4502b008bd3f55704eeee93a80"
  },
  "samples": [
    {
      "displayName": "Custom Binding Composite",
      "description": "Shows how to implement a custom composite binding.",
      "path": "Samples~/CustomComposite"
    },
    {
      "displayName": "Custom Device",
      "description": "Shows how to implement a custom input device.",
      "path": "Samples~/CustomDevice"
    },
    {
      "displayName": "Custom Device Usages",
      "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
      "path": "Samples~/CustomDeviceUsages"
    },
    {
      "displayName": "Gamepad Mouse Cursor",
      "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
      "path": "Samples~/GamepadMouseCursor"
    },
    {
      "displayName": "In-Game Hints",
      "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
      "path": "Samples~/InGameHints"
    },
    {
      "displayName": "InputDeviceTester",
      "description": "A scene containing UI to visualize the controls on various supported input devices.",
      "path": "Samples~/InputDeviceTester"
    },
    {
      "displayName": "Input Recorder",
      "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
      "path": "Samples~/InputRecorder"
    },
    {
      "displayName": "On-Screen Controls",
      "description": "Demonstrates a simple setup for an on-screen joystick.",
      "path": "Samples~/OnScreenControls"
    },
    {
      "displayName": "Rebinding UI",
      "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
      "path": "Samples~/RebindingUI"
    },
    {
      "displayName": "Simple Demo",
      "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
      "path": "Samples~/SimpleDemo"
    },
    {
      "displayName": "Simple Multiplayer",
      "description": "Demonstrates how to set up a simple local multiplayer scenario.",
      "path": "Samples~/SimpleMultiplayer"
    },
    {
      "displayName": "Touch Samples",
      "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
      "path": "Samples~/TouchSamples"
    },
    {
      "displayName": "UI vs. Game Input",
      "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
      "path": "Samples~/UIvsGameInput"
    },
    {
      "displayName": "Unity Remote",
      "description": "An example with a simple scene for trying out the Unity Remote app.",
      "path": "Samples~/UnityRemote"
    },
    {
      "displayName": "Visualizers",
      "description": "Several example visualizations of input controls/devices and input actions.",
      "path": "Samples~/Visualizers"
    }
  ]
}
